// This file is auto-generated by @hey-api/openapi-ts

import {
  createClient,
  createConfig,
  type Options,
} from "@hey-api/client-fetch";
import type {
  DeletePagesPageIdLinksIdData,
  DeletePagesPageIdLinksIdError,
  DeletePagesPageIdLinksIdResponse,
  GetPagesError,
  GetPagesIdData,
  GetPagesIdError,
  GetPagesIdResponse,
  GetPagesResponse,
  GetSlugData,
  GetSlugError,
  GetSlugResponse,
  ListLinksError,
  ListLinksResponse,
  PostHtmlGenerateData,
  PostHtmlGenerateError,
  PostHtmlGenerateResponse,
  PostPagesData,
  PostPagesError,
  PostPagesPageIdLinksData,
  PostPagesPageIdLinksError,
  PostPagesPageIdLinksResponse,
  PostPagesResponse,
  PutPagesIdData,
  PutPagesIdError,
  PutPagesIdResponse,
} from "./types.gen.ts";

export const client = createClient(createConfig());

export const listLinks = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ListLinksResponse,
    ListLinksError,
    ThrowOnError
  >({
    ...options,
    url: "/links",
  });
};

/**
 * Create a new link
 */
export const postPagesPageIdLinks = <ThrowOnError extends boolean = false>(
  options: Options<PostPagesPageIdLinksData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    PostPagesPageIdLinksResponse,
    PostPagesPageIdLinksError,
    ThrowOnError
  >({
    ...options,
    url: "/pages/:pageId/links",
  });
};

/**
 * Delete a link
 */
export const deletePagesPageIdLinksId = <ThrowOnError extends boolean = false>(
  options: Options<DeletePagesPageIdLinksIdData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    DeletePagesPageIdLinksIdResponse,
    DeletePagesPageIdLinksIdError,
    ThrowOnError
  >({
    ...options,
    url: "/pages/:pageId/links/:id",
  });
};

export const getPages = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetPagesResponse,
    GetPagesError,
    ThrowOnError
  >({
    ...options,
    url: "/pages",
  });
};

/**
 * Create a page
 */
export const postPages = <ThrowOnError extends boolean = false>(
  options?: Options<PostPagesData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    PostPagesResponse,
    PostPagesError,
    ThrowOnError
  >({
    ...options,
    url: "/pages",
  });
};

export const getPagesId = <ThrowOnError extends boolean = false>(
  options: Options<GetPagesIdData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetPagesIdResponse,
    GetPagesIdError,
    ThrowOnError
  >({
    ...options,
    url: "/pages/:id",
  });
};

/**
 * Update a page
 */
export const putPagesId = <ThrowOnError extends boolean = false>(
  options: Options<PutPagesIdData, ThrowOnError>,
) => {
  return (options?.client ?? client).put<
    PutPagesIdResponse,
    PutPagesIdError,
    ThrowOnError
  >({
    ...options,
    url: "/pages/:id",
  });
};

/**
 * Generate static HTML for a specific page
 */
export const postHtmlGenerate = <ThrowOnError extends boolean = false>(
  options?: Options<PostHtmlGenerateData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    PostHtmlGenerateResponse,
    PostHtmlGenerateError,
    ThrowOnError
  >({
    ...options,
    url: "/html/generate",
  });
};

/**
 * View a published link page
 */
export const getSlug = <ThrowOnError extends boolean = false>(
  options: Options<GetSlugData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetSlugResponse,
    GetSlugError,
    ThrowOnError
  >({
    ...options,
    url: "/:slug",
  });
};
