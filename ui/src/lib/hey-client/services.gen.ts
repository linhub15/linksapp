// This file is auto-generated by @hey-api/openapi-ts

import {
  createClient,
  createConfig,
  type Options,
} from "@hey-api/client-fetch";
import type {
  CreateLinkData,
  CreateLinkResponse,
  CreatePageData,
  CreatePageResponse,
  DeleteLinkData,
  DeleteLinkResponse,
  DeletePageData,
  DeletePageResponse,
  GenerateHtmlData,
  GetBySlugData,
  GetPageData,
  GetPageResponse,
  ListLinksData,
  ListLinksResponse,
  UpdateLinkData,
  UpdateLinkResponse,
  UpdatePageData,
  UpdatePageResponse,
} from "./types.gen.ts";
import { getPageResponseTransformer } from "./transformers.gen.ts";

export const client = createClient(createConfig());

export const listLinks = <ThrowOnError extends boolean = false>(
  options: Options<ListLinksData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ListLinksResponse,
    unknown,
    ThrowOnError
  >({
    ...options,
    url: "/pages/{page_id}/links",
  });
};

/**
 * Create a new link
 */
export const createLink = <ThrowOnError extends boolean = false>(
  options: Options<CreateLinkData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    CreateLinkResponse,
    unknown,
    ThrowOnError
  >({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    url: "/pages/{page_id}/links",
  });
};

/**
 * Delete a link
 */
export const deleteLink = <ThrowOnError extends boolean = false>(
  options: Options<DeleteLinkData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    DeleteLinkResponse,
    unknown,
    ThrowOnError
  >({
    ...options,
    url: "/pages/{page_id}/links/{id}",
  });
};

/**
 * Update a link
 */
export const updateLink = <ThrowOnError extends boolean = false>(
  options: Options<UpdateLinkData, ThrowOnError>,
) => {
  return (options?.client ?? client).put<
    UpdateLinkResponse,
    unknown,
    ThrowOnError
  >({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    url: "/pages/{page_id}/links/{id}",
  });
};

export const deletePage = <ThrowOnError extends boolean = false>(
  options: Options<DeletePageData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    DeletePageResponse,
    unknown,
    ThrowOnError
  >({
    ...options,
    url: "/pages/{page_id}",
  });
};

export const getPage = <ThrowOnError extends boolean = false>(
  options: Options<GetPageData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetPageResponse,
    unknown,
    ThrowOnError
  >({
    ...options,
    url: "/pages/{page_id}",
    responseTransformer: getPageResponseTransformer,
  });
};

/**
 * Update a page
 */
export const updatePage = <ThrowOnError extends boolean = false>(
  options: Options<UpdatePageData, ThrowOnError>,
) => {
  return (options?.client ?? client).put<
    UpdatePageResponse,
    unknown,
    ThrowOnError
  >({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    url: "/pages/{page_id}",
  });
};

/**
 * Create a page
 */
export const createPage = <ThrowOnError extends boolean = false>(
  options?: Options<CreatePageData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    CreatePageResponse,
    unknown,
    ThrowOnError
  >({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    url: "/pages",
  });
};

/**
 * Generate static HTML for a specific page
 */
export const generateHtml = <ThrowOnError extends boolean = false>(
  options?: Options<GenerateHtmlData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<unknown, unknown, ThrowOnError>({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    url: "/html/generate",
  });
};

/**
 * View a published link page
 */
export const getBySlug = <ThrowOnError extends boolean = false>(
  options: Options<GetBySlugData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<unknown, unknown, ThrowOnError>({
    ...options,
    url: "/{slug}",
  });
};
