/// <reference types="@tanstack/react-router" />

// deno-lint-ignore-file

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root.tsx";
import { Route as IndexImport } from "./routes/index.tsx";
import { Route as AboutIndexImport } from "./routes/about/index.tsx";
import { Route as PagesIdIndexImport } from "./routes/pages.$id/index.tsx";
import { Route as authSignoutIndexImport } from "./routes/(auth)/signout.index.tsx";
import { Route as authLoginIndexImport } from "./routes/(auth)/login.index.tsx";

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const AboutIndexRoute = AboutIndexImport.update({
  id: "/about/",
  path: "/about/",
  getParentRoute: () => rootRoute,
} as any);

const PagesIdIndexRoute = PagesIdIndexImport.update({
  id: "/pages/$id/",
  path: "/pages/$id/",
  getParentRoute: () => rootRoute,
} as any);

const authSignoutIndexRoute = authSignoutIndexImport.update({
  id: "/(auth)/signout/",
  path: "/signout/",
  getParentRoute: () => rootRoute,
} as any);

const authLoginIndexRoute = authLoginIndexImport.update({
  id: "/(auth)/login/",
  path: "/login/",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/about/": {
      id: "/about/";
      path: "/about";
      fullPath: "/about";
      preLoaderRoute: typeof AboutIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/(auth)/login/": {
      id: "/(auth)/login/";
      path: "/login";
      fullPath: "/login";
      preLoaderRoute: typeof authLoginIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/(auth)/signout/": {
      id: "/(auth)/signout/";
      path: "/signout";
      fullPath: "/signout";
      preLoaderRoute: typeof authSignoutIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/pages/$id/": {
      id: "/pages/$id/";
      path: "/pages/$id";
      fullPath: "/pages/$id";
      preLoaderRoute: typeof PagesIdIndexImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/about": typeof AboutIndexRoute;
  "/login": typeof authLoginIndexRoute;
  "/signout": typeof authSignoutIndexRoute;
  "/pages/$id": typeof PagesIdIndexRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/about": typeof AboutIndexRoute;
  "/login": typeof authLoginIndexRoute;
  "/signout": typeof authSignoutIndexRoute;
  "/pages/$id": typeof PagesIdIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/about/": typeof AboutIndexRoute;
  "/(auth)/login/": typeof authLoginIndexRoute;
  "/(auth)/signout/": typeof authSignoutIndexRoute;
  "/pages/$id/": typeof PagesIdIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/about" | "/login" | "/signout" | "/pages/$id";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/about" | "/login" | "/signout" | "/pages/$id";
  id:
    | "__root__"
    | "/"
    | "/about/"
    | "/(auth)/login/"
    | "/(auth)/signout/"
    | "/pages/$id/";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AboutIndexRoute: typeof AboutIndexRoute;
  authLoginIndexRoute: typeof authLoginIndexRoute;
  authSignoutIndexRoute: typeof authSignoutIndexRoute;
  PagesIdIndexRoute: typeof PagesIdIndexRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutIndexRoute: AboutIndexRoute,
  authLoginIndexRoute: authLoginIndexRoute,
  authSignoutIndexRoute: authSignoutIndexRoute,
  PagesIdIndexRoute: PagesIdIndexRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about/",
        "/(auth)/login/",
        "/(auth)/signout/",
        "/pages/$id/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about/": {
      "filePath": "about/index.tsx"
    },
    "/(auth)/login/": {
      "filePath": "(auth)/login.index.tsx"
    },
    "/(auth)/signout/": {
      "filePath": "(auth)/signout.index.tsx"
    },
    "/pages/$id/": {
      "filePath": "pages.$id/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
