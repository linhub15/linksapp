/// <reference types="@tanstack/react-router" />

// deno-lint-ignore-file

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root.tsx";
import { Route as AppImport } from "./routes/_app.tsx";
import { Route as IndexImport } from "./routes/index.tsx";
import { Route as AppPagesIndexImport } from "./routes/_app/pages/index.tsx";
import { Route as AppFormsIndexImport } from "./routes/_app/forms/index.tsx";
import { Route as AppAccountIndexImport } from "./routes/_app/account/index.tsx";
import { Route as AppAboutIndexImport } from "./routes/_app/about/index.tsx";
import { Route as authLogoutIndexImport } from "./routes/(auth)/logout.index.tsx";
import { Route as authLoginIndexImport } from "./routes/(auth)/login.index.tsx";
import { Route as AppPagesNewImport } from "./routes/_app/pages/new.tsx";
import { Route as AppFormsNewImport } from "./routes/_app/forms/new.tsx";
import { Route as AppPagesIdIndexImport } from "./routes/_app/pages/$id/index.tsx";
import { Route as AppFormsIdFormImport } from "./routes/_app/forms/$id/_form.tsx";
import { Route as AppFormsIdFormIndexImport } from "./routes/_app/forms/$id/_form.index.tsx";
import { Route as AppFormsIdFormSettingsImport } from "./routes/_app/forms/$id/_form.settings.tsx";
import { Route as AppFormsIdFormQuickstartImport } from "./routes/_app/forms/$id/_form.quickstart.tsx";

// Create Virtual Routes

const AppFormsIdImport = createFileRoute("/_app/forms/$id")();

// Create/Update Routes

const AppRoute = AppImport.update({
  id: "/_app",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const AppFormsIdRoute = AppFormsIdImport.update({
  id: "/forms/$id",
  path: "/forms/$id",
  getParentRoute: () => AppRoute,
} as any);

const AppPagesIndexRoute = AppPagesIndexImport.update({
  id: "/pages/",
  path: "/pages/",
  getParentRoute: () => AppRoute,
} as any);

const AppFormsIndexRoute = AppFormsIndexImport.update({
  id: "/forms/",
  path: "/forms/",
  getParentRoute: () => AppRoute,
} as any);

const AppAccountIndexRoute = AppAccountIndexImport.update({
  id: "/account/",
  path: "/account/",
  getParentRoute: () => AppRoute,
} as any);

const AppAboutIndexRoute = AppAboutIndexImport.update({
  id: "/about/",
  path: "/about/",
  getParentRoute: () => AppRoute,
} as any);

const authLogoutIndexRoute = authLogoutIndexImport.update({
  id: "/(auth)/logout/",
  path: "/logout/",
  getParentRoute: () => rootRoute,
} as any);

const authLoginIndexRoute = authLoginIndexImport.update({
  id: "/(auth)/login/",
  path: "/login/",
  getParentRoute: () => rootRoute,
} as any);

const AppPagesNewRoute = AppPagesNewImport.update({
  id: "/pages/new",
  path: "/pages/new",
  getParentRoute: () => AppRoute,
} as any);

const AppFormsNewRoute = AppFormsNewImport.update({
  id: "/forms/new",
  path: "/forms/new",
  getParentRoute: () => AppRoute,
} as any);

const AppPagesIdIndexRoute = AppPagesIdIndexImport.update({
  id: "/pages/$id/",
  path: "/pages/$id/",
  getParentRoute: () => AppRoute,
} as any);

const AppFormsIdFormRoute = AppFormsIdFormImport.update({
  id: "/_form",
  getParentRoute: () => AppFormsIdRoute,
} as any);

const AppFormsIdFormIndexRoute = AppFormsIdFormIndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => AppFormsIdFormRoute,
} as any);

const AppFormsIdFormSettingsRoute = AppFormsIdFormSettingsImport.update({
  id: "/settings",
  path: "/settings",
  getParentRoute: () => AppFormsIdFormRoute,
} as any);

const AppFormsIdFormQuickstartRoute = AppFormsIdFormQuickstartImport.update({
  id: "/quickstart",
  path: "/quickstart",
  getParentRoute: () => AppFormsIdFormRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/_app": {
      id: "/_app";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof AppImport;
      parentRoute: typeof rootRoute;
    };
    "/_app/forms/new": {
      id: "/_app/forms/new";
      path: "/forms/new";
      fullPath: "/forms/new";
      preLoaderRoute: typeof AppFormsNewImport;
      parentRoute: typeof AppImport;
    };
    "/_app/pages/new": {
      id: "/_app/pages/new";
      path: "/pages/new";
      fullPath: "/pages/new";
      preLoaderRoute: typeof AppPagesNewImport;
      parentRoute: typeof AppImport;
    };
    "/(auth)/login/": {
      id: "/(auth)/login/";
      path: "/login";
      fullPath: "/login";
      preLoaderRoute: typeof authLoginIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/(auth)/logout/": {
      id: "/(auth)/logout/";
      path: "/logout";
      fullPath: "/logout";
      preLoaderRoute: typeof authLogoutIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/_app/about/": {
      id: "/_app/about/";
      path: "/about";
      fullPath: "/about";
      preLoaderRoute: typeof AppAboutIndexImport;
      parentRoute: typeof AppImport;
    };
    "/_app/account/": {
      id: "/_app/account/";
      path: "/account";
      fullPath: "/account";
      preLoaderRoute: typeof AppAccountIndexImport;
      parentRoute: typeof AppImport;
    };
    "/_app/forms/": {
      id: "/_app/forms/";
      path: "/forms";
      fullPath: "/forms";
      preLoaderRoute: typeof AppFormsIndexImport;
      parentRoute: typeof AppImport;
    };
    "/_app/pages/": {
      id: "/_app/pages/";
      path: "/pages";
      fullPath: "/pages";
      preLoaderRoute: typeof AppPagesIndexImport;
      parentRoute: typeof AppImport;
    };
    "/_app/forms/$id": {
      id: "/_app/forms/$id";
      path: "/forms/$id";
      fullPath: "/forms/$id";
      preLoaderRoute: typeof AppFormsIdImport;
      parentRoute: typeof AppImport;
    };
    "/_app/forms/$id/_form": {
      id: "/_app/forms/$id/_form";
      path: "/forms/$id";
      fullPath: "/forms/$id";
      preLoaderRoute: typeof AppFormsIdFormImport;
      parentRoute: typeof AppFormsIdRoute;
    };
    "/_app/pages/$id/": {
      id: "/_app/pages/$id/";
      path: "/pages/$id";
      fullPath: "/pages/$id";
      preLoaderRoute: typeof AppPagesIdIndexImport;
      parentRoute: typeof AppImport;
    };
    "/_app/forms/$id/_form/quickstart": {
      id: "/_app/forms/$id/_form/quickstart";
      path: "/quickstart";
      fullPath: "/forms/$id/quickstart";
      preLoaderRoute: typeof AppFormsIdFormQuickstartImport;
      parentRoute: typeof AppFormsIdFormImport;
    };
    "/_app/forms/$id/_form/settings": {
      id: "/_app/forms/$id/_form/settings";
      path: "/settings";
      fullPath: "/forms/$id/settings";
      preLoaderRoute: typeof AppFormsIdFormSettingsImport;
      parentRoute: typeof AppFormsIdFormImport;
    };
    "/_app/forms/$id/_form/": {
      id: "/_app/forms/$id/_form/";
      path: "/";
      fullPath: "/forms/$id/";
      preLoaderRoute: typeof AppFormsIdFormIndexImport;
      parentRoute: typeof AppFormsIdFormImport;
    };
  }
}

// Create and export the route tree

interface AppFormsIdFormRouteChildren {
  AppFormsIdFormQuickstartRoute: typeof AppFormsIdFormQuickstartRoute;
  AppFormsIdFormSettingsRoute: typeof AppFormsIdFormSettingsRoute;
  AppFormsIdFormIndexRoute: typeof AppFormsIdFormIndexRoute;
}

const AppFormsIdFormRouteChildren: AppFormsIdFormRouteChildren = {
  AppFormsIdFormQuickstartRoute: AppFormsIdFormQuickstartRoute,
  AppFormsIdFormSettingsRoute: AppFormsIdFormSettingsRoute,
  AppFormsIdFormIndexRoute: AppFormsIdFormIndexRoute,
};

const AppFormsIdFormRouteWithChildren = AppFormsIdFormRoute._addFileChildren(
  AppFormsIdFormRouteChildren,
);

interface AppFormsIdRouteChildren {
  AppFormsIdFormRoute: typeof AppFormsIdFormRouteWithChildren;
}

const AppFormsIdRouteChildren: AppFormsIdRouteChildren = {
  AppFormsIdFormRoute: AppFormsIdFormRouteWithChildren,
};

const AppFormsIdRouteWithChildren = AppFormsIdRoute._addFileChildren(
  AppFormsIdRouteChildren,
);

interface AppRouteChildren {
  AppFormsNewRoute: typeof AppFormsNewRoute;
  AppPagesNewRoute: typeof AppPagesNewRoute;
  AppAboutIndexRoute: typeof AppAboutIndexRoute;
  AppAccountIndexRoute: typeof AppAccountIndexRoute;
  AppFormsIndexRoute: typeof AppFormsIndexRoute;
  AppPagesIndexRoute: typeof AppPagesIndexRoute;
  AppFormsIdRoute: typeof AppFormsIdRouteWithChildren;
  AppPagesIdIndexRoute: typeof AppPagesIdIndexRoute;
}

const AppRouteChildren: AppRouteChildren = {
  AppFormsNewRoute: AppFormsNewRoute,
  AppPagesNewRoute: AppPagesNewRoute,
  AppAboutIndexRoute: AppAboutIndexRoute,
  AppAccountIndexRoute: AppAccountIndexRoute,
  AppFormsIndexRoute: AppFormsIndexRoute,
  AppPagesIndexRoute: AppPagesIndexRoute,
  AppFormsIdRoute: AppFormsIdRouteWithChildren,
  AppPagesIdIndexRoute: AppPagesIdIndexRoute,
};

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "": typeof AppRouteWithChildren;
  "/forms/new": typeof AppFormsNewRoute;
  "/pages/new": typeof AppPagesNewRoute;
  "/login": typeof authLoginIndexRoute;
  "/logout": typeof authLogoutIndexRoute;
  "/about": typeof AppAboutIndexRoute;
  "/account": typeof AppAccountIndexRoute;
  "/forms": typeof AppFormsIndexRoute;
  "/pages": typeof AppPagesIndexRoute;
  "/forms/$id": typeof AppFormsIdFormRouteWithChildren;
  "/pages/$id": typeof AppPagesIdIndexRoute;
  "/forms/$id/quickstart": typeof AppFormsIdFormQuickstartRoute;
  "/forms/$id/settings": typeof AppFormsIdFormSettingsRoute;
  "/forms/$id/": typeof AppFormsIdFormIndexRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "": typeof AppRouteWithChildren;
  "/forms/new": typeof AppFormsNewRoute;
  "/pages/new": typeof AppPagesNewRoute;
  "/login": typeof authLoginIndexRoute;
  "/logout": typeof authLogoutIndexRoute;
  "/about": typeof AppAboutIndexRoute;
  "/account": typeof AppAccountIndexRoute;
  "/forms": typeof AppFormsIndexRoute;
  "/pages": typeof AppPagesIndexRoute;
  "/forms/$id": typeof AppFormsIdFormIndexRoute;
  "/pages/$id": typeof AppPagesIdIndexRoute;
  "/forms/$id/quickstart": typeof AppFormsIdFormQuickstartRoute;
  "/forms/$id/settings": typeof AppFormsIdFormSettingsRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/_app": typeof AppRouteWithChildren;
  "/_app/forms/new": typeof AppFormsNewRoute;
  "/_app/pages/new": typeof AppPagesNewRoute;
  "/(auth)/login/": typeof authLoginIndexRoute;
  "/(auth)/logout/": typeof authLogoutIndexRoute;
  "/_app/about/": typeof AppAboutIndexRoute;
  "/_app/account/": typeof AppAccountIndexRoute;
  "/_app/forms/": typeof AppFormsIndexRoute;
  "/_app/pages/": typeof AppPagesIndexRoute;
  "/_app/forms/$id": typeof AppFormsIdRouteWithChildren;
  "/_app/forms/$id/_form": typeof AppFormsIdFormRouteWithChildren;
  "/_app/pages/$id/": typeof AppPagesIdIndexRoute;
  "/_app/forms/$id/_form/quickstart": typeof AppFormsIdFormQuickstartRoute;
  "/_app/forms/$id/_form/settings": typeof AppFormsIdFormSettingsRoute;
  "/_app/forms/$id/_form/": typeof AppFormsIdFormIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | ""
    | "/forms/new"
    | "/pages/new"
    | "/login"
    | "/logout"
    | "/about"
    | "/account"
    | "/forms"
    | "/pages"
    | "/forms/$id"
    | "/pages/$id"
    | "/forms/$id/quickstart"
    | "/forms/$id/settings"
    | "/forms/$id/";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/"
    | ""
    | "/forms/new"
    | "/pages/new"
    | "/login"
    | "/logout"
    | "/about"
    | "/account"
    | "/forms"
    | "/pages"
    | "/forms/$id"
    | "/pages/$id"
    | "/forms/$id/quickstart"
    | "/forms/$id/settings";
  id:
    | "__root__"
    | "/"
    | "/_app"
    | "/_app/forms/new"
    | "/_app/pages/new"
    | "/(auth)/login/"
    | "/(auth)/logout/"
    | "/_app/about/"
    | "/_app/account/"
    | "/_app/forms/"
    | "/_app/pages/"
    | "/_app/forms/$id"
    | "/_app/forms/$id/_form"
    | "/_app/pages/$id/"
    | "/_app/forms/$id/_form/quickstart"
    | "/_app/forms/$id/_form/settings"
    | "/_app/forms/$id/_form/";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AppRoute: typeof AppRouteWithChildren;
  authLoginIndexRoute: typeof authLoginIndexRoute;
  authLogoutIndexRoute: typeof authLogoutIndexRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  authLoginIndexRoute: authLoginIndexRoute,
  authLogoutIndexRoute: authLogoutIndexRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_app",
        "/(auth)/login/",
        "/(auth)/logout/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/forms/new",
        "/_app/pages/new",
        "/_app/about/",
        "/_app/account/",
        "/_app/forms/",
        "/_app/pages/",
        "/_app/forms/$id",
        "/_app/pages/$id/"
      ]
    },
    "/_app/forms/new": {
      "filePath": "_app/forms/new.tsx",
      "parent": "/_app"
    },
    "/_app/pages/new": {
      "filePath": "_app/pages/new.tsx",
      "parent": "/_app"
    },
    "/(auth)/login/": {
      "filePath": "(auth)/login.index.tsx"
    },
    "/(auth)/logout/": {
      "filePath": "(auth)/logout.index.tsx"
    },
    "/_app/about/": {
      "filePath": "_app/about/index.tsx",
      "parent": "/_app"
    },
    "/_app/account/": {
      "filePath": "_app/account/index.tsx",
      "parent": "/_app"
    },
    "/_app/forms/": {
      "filePath": "_app/forms/index.tsx",
      "parent": "/_app"
    },
    "/_app/pages/": {
      "filePath": "_app/pages/index.tsx",
      "parent": "/_app"
    },
    "/_app/forms/$id": {
      "filePath": "_app/forms/$id",
      "parent": "/_app",
      "children": [
        "/_app/forms/$id/_form"
      ]
    },
    "/_app/forms/$id/_form": {
      "filePath": "_app/forms/$id/_form.tsx",
      "parent": "/_app/forms/$id",
      "children": [
        "/_app/forms/$id/_form/quickstart",
        "/_app/forms/$id/_form/settings",
        "/_app/forms/$id/_form/"
      ]
    },
    "/_app/pages/$id/": {
      "filePath": "_app/pages/$id/index.tsx",
      "parent": "/_app"
    },
    "/_app/forms/$id/_form/quickstart": {
      "filePath": "_app/forms/$id/_form.quickstart.tsx",
      "parent": "/_app/forms/$id/_form"
    },
    "/_app/forms/$id/_form/settings": {
      "filePath": "_app/forms/$id/_form.settings.tsx",
      "parent": "/_app/forms/$id/_form"
    },
    "/_app/forms/$id/_form/": {
      "filePath": "_app/forms/$id/_form.index.tsx",
      "parent": "/_app/forms/$id/_form"
    }
  }
}
ROUTE_MANIFEST_END */
